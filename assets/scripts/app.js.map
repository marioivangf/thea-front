{"version":3,"sources":["functions.js"],"names":["update_form_styles","cont","document","getElementById","v","value","tinycolor","isDark","getBrightness","darken","tmpl","question_templs","style_sheet","Mustache","render","write_styles","classList","toggle","style_id","css_text","style_el","getElementsByTagName","removeChild","createElement","type","id","innerHTML","appendChild","not_responsive_check","w","window","innerWidth","body","each_node_evt","selector","cb","nodes","querySelectorAll","_","each","node","addEventListener","each_node_evt_init_once","length","onetime","callback","e","target","removeEventListener","arguments","callee","serialize_ques_options","children","index","in_reply","querySelector","in_value","name","get_input_image","input","files","reader","FileReader","onload","event","result","readAsDataURL","dataset","pathName","currentTarget","sync_target","syncedInput","trim","textContent","placeholder","parentNode","parentClassToggle","style","display","stopPropagation","parent_clist","state_class","contains","remove","add","image","data","src","element","proxyClick","click","unset","dispatchEvent","Event","med_logo_in","logos_cont","logo","Image","forms","form","preventDefault","endpoint","action","searcher","FormData","qwest","post","then","xhr","response","impostor","backgroundColor","rome","use","moment","start","end","start_cal","time","monthsInCalendar","dateValidator","val","beforeEq","end_cal","afterEq","scrollable_parent","closest","hide","cal","Dropdown","Tagin","path","autocomplete","autoComplete","minChars","source","term","abort","q","woof","woofmark","markdown","html","parseHTML","domador","parseMarkdown","megamark","defaultMode","modes","button","commands","command","icon","Tabule","opts_string","sticker","Sticker","JSON","parse","list","sample","sample_clone","cloneNode","btn","clone","input_data","i","ques","block","child","push","stringify","quests","quests_cont","quest_type_sel","option_check","opt","options","selectedIndex","quest_drake","dragula","removeOnSpill","moves","el","container","handle","sibling","on","Chart","defaults","global","title","gender_chart_dom","chart","getContext","age_chart_dom","patients_chart_dom","questions_source","questions","question","dragula_containers","drake","copy","accepts","def","questionDefinition","cancel","definition","exists","alert","visit_block","blockName","rendered","wrapper","insertBefore"],"mappings":"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","file":"app.js","sourcesContent":["(function () {\n\n  // GLOBALS\n  var path_name = document.body.dataset.pathName;\n\n  // Not responsive validation\n  window.addEventListener('resize', not_responsive_check, true);\n  not_responsive_check();\n\n  // Sync input with else text\n  each_node_evt(\"[data-synced-input]\", \"keyup\", function (event) {\n    var input = event.currentTarget;\n    var sync_target = document.getElementById(input.dataset.syncedInput);\n    var value = input.value.trim();\n    sync_target.classList.toggle(\"clean\", value === \"\")\n    sync_target.textContent = (value === \"\") ? input.placeholder : value;\n  });\n\n  // Toggle password in inputs\n  each_node_evt(\"[data-password-toggle]\", \"mousedown\", function (event) {\n    var input = event.currentTarget.parentNode.getElementsByTagName(\"INPUT\")[0];\n    input.type = \"text\";\n  });\n  each_node_evt(\"[data-password-toggle]\", \"mouseup\", function (event) {\n    var input = event.currentTarget.parentNode.getElementsByTagName(\"INPUT\")[0];\n    input.type = \"password\";\n  });\n\n  // Toggle classes in parents\n  each_node_evt(\"[data-parent-class-toggle]\", \"click\", function (event) {\n    var target = event.currentTarget;\n    target.parentNode.classList.toggle(target.dataset.parentClassToggle);\n  });\n\n  // Toggle classes in parents\n  each_node_evt(\"[data-close-parent]\", \"click\", function (event) {\n    var target = event.currentTarget;\n    target.parentNode.style.display = \"none\";\n  });\n\n  // Toggle classes for dropdowns\n  each_node_evt(\"[data-dropdown-toggle]\", \"click\", function (event) {\n    event.stopPropagation();\n    var parent_clist = event.currentTarget.parentNode.classList;\n    var state_class = \"dropdown--opened\";\n    if (parent_clist.contains(state_class))\n      parent_clist.remove(state_class);\n    else {\n      parent_clist.add(state_class);\n      onetime(document, \"click\", function () {\n        parent_clist.remove(state_class);\n      });\n    }\n  });\n\n  // Image inputs with preview\n  each_node_evt(\"[data-image-input] input[type='file']\", \"change\", function (event) {\n\n    var input = event.currentTarget;\n    var image = input.parentNode.querySelector(\"img\");\n\n    if (input.value) {\n      get_input_image(input, function (data) {\n        input.parentNode.classList.remove(\"clean\");\n        image.src = data;\n      });\n    } else {\n      input.parentNode.classList.add(\"clean\");\n      image.src = \"\";\n    }\n  });\n\n  // Image inputs with preview\n  each_node_evt(\"[data-proxy-click]\", \"click\", function (event) {\n    var element = event.currentTarget;\n    document.querySelector(element.dataset.proxyClick).click();\n  });\n\n  // Unset inputs\n  each_node_evt(\"[data-unset]\", \"click\", function (event) {\n    var element = event.currentTarget;\n    var input = document.querySelector(element.dataset.unset);\n    input.value = \"\";\n    input.dispatchEvent(new Event(\"change\"));\n  });\n\n  // Med logo in form construction\n  var med_logo_in = document.getElementById(\"med-logo-in\");\n  if (med_logo_in) {\n    var logos_cont = document.getElementById(\"af-logos\");\n    med_logo_in.addEventListener(\"change\", function () {\n      var logo = document.getElementById(\"med-logo\");\n      if (logo) logo.parentNode.removeChild(logo);\n      if (med_logo_in.value) {\n        get_input_image(med_logo_in, function (data) {\n          var image = new Image();\n          image.id = \"med-logo\";\n          image.src = data;\n          logos_cont.appendChild(image);\n        });\n      }\n    });\n  }\n\n  // Requests init\n  var forms = document.querySelectorAll(\"[data-searcher]\");\n  _(forms).each(function (form) {\n    form.addEventListener(\"submit\", function (event) {\n      event.preventDefault();\n      var endpoint = form.action;\n      var target = form.dataset.searcher;\n      var data = new FormData(form);\n      qwest.post(endpoint, data).then(function(xhr, response) {\n        document.getElementById(target).innerHTML = response;\n      });\n    });\n  });\n\n  // Color inputs\n  _(document.querySelectorAll(\"[data-input-color]\")).each(function (node) {\n    var input = node.querySelector(\"[data-input]\");\n    var impostor = node.querySelector(\"[data-impostor]\");\n    input.addEventListener(\"change\", function (event) {\n      impostor.style.backgroundColor = input.value;\n    }, false);\n    impostor.style.backgroundColor = input.value;\n  });\n\n  // Rome caledar inititalization\n  _(document.querySelectorAll(\"[data-calendar-range]\")).each(function (node) {\n\n    rome.use(moment);\n    var start = node.querySelector(\"[data-calendar-range-start]\");\n    var end = node.querySelector(\"[data-calendar-range-end]\");\n    var start_cal = rome(start, {\n      time: false,\n      monthsInCalendar: 2,\n      dateValidator: rome.val.beforeEq(end)\n    });\n    var end_cal = rome(end, {\n      time: false,\n      monthsInCalendar: 2,\n      dateValidator: rome.val.afterEq(start)\n    });\n    var scrollable_parent = node.closest(\".scrollable\");\n    if (scrollable_parent) {\n      scrollable_parent.addEventListener(\"scroll\", function() {\n        start_cal.hide();\n        end_cal.hide();\n      });\n    }\n    window.addEventListener(\"scroll\", function() {\n      start_cal.hide();\n      end_cal.hide();\n    });\n  });\n\n  _(document.querySelectorAll(\"[data-date-input]\")).each(function (node) {\n    rome.use(moment);\n    var cal = rome(node, {\n      time: false\n    });\n    var scrollable_parent = node.closest(\".scrollable\");\n    if (scrollable_parent) {\n      scrollable_parent.addEventListener(\"scroll\", function() {\n        cal.hide();\n      });\n    }\n    window.addEventListener(\"scroll\", function() {\n      cal.hide();\n    });\n  });\n\n  // Dropdown inititalization\n  _(document.querySelectorAll(\"[data-dd]\")).each(function (node) {\n    new Dropdown(node);\n  });\n\n  // Tagin inititalization\n  _(document.querySelectorAll(\"[data-tagin]\")).each(function (node) {\n    new Tagin(node);\n  });\n\n  // Autocomplete inititalization\n  _(document.querySelectorAll(\"[data-autocomplete]\")).each(function (node) {\n    var xhr;\n    var path = node.dataset.autocomplete;\n    new autoComplete({\n      selector: node,\n      minChars: 2,\n      source: function (term, response) {\n        try { xhr.abort(); } catch (e) {}\n        qwest.post(path, { q: term }).then(function(xhr, data) {\n          response(data);\n        });\n      }\n    });\n  });\n\n  // Woofmark inititalization\n  _(document.querySelectorAll(\"[data-woofmark]\")).each(function (node) {\n    var woof = woofmark(node, {\n      markdown: false,\n      html: false,\n      parseHTML: domador,\n      parseMarkdown: megamark,\n      defaultMode: \"wysiwyg\",\n      render: {\n        modes: function (button, id) { return false; },\n        commands: function (command, id) {\n          if (id === \"code\" || id === \"image\") {\n            command.style.display = \"none\";\n            return false;\n          }\n          var icon = \"\";\n          switch(id) {\n            case \"bold\":\n              icon = \"&#xE238;\"; break;\n            case \"italic\":\n              icon = \"&#xE23F;\"; break;\n            case \"quote\":\n              icon = \"&#xE244;\"; break;\n            case \"ol\":\n              icon = \"&#xE242;\"; break;\n            case \"ul\":\n              icon = \"&#xE241;\"; break;\n            case \"heading\":\n              icon = \"&#xE245;\"; break;\n            case \"link\":\n              icon = \"&#xE250;\"; break;\n          }\n          command.innerHTML = '<i class=\"material-icons\">'+icon+'</i>';\n        }\n      }\n    });\n    var form = node.form;\n    form.addEventListener(\"submit\", function () {\n      node.value = woof.value();\n    });\n  });\n\n  // Tabule inititalization\n  _(document.querySelectorAll(\"[data-tabule]\")).each(function (node) {\n    new Tabule(node);\n  });\n\n  // Sticker JS init\n  _(document.querySelectorAll(\"[data-sticker]\")).each(function (node) {\n    var opts_string = node.dataset.sticker || \"{}\";\n    new Sticker(node, JSON.parse(opts_string));\n  });\n\n  // Adder for question options\n  _(document.querySelectorAll(\"[data-adder]\")).each(function (node) {\n    var list = node.querySelector(\"[data-adder-list]\");\n    var sample = node.querySelector(\"[data-adder-sample]\");\n    var sample_clone = sample.cloneNode(true);\n    var btn = node.querySelector(\"[data-adder-button]\");\n    btn.addEventListener(\"click\", function () {\n      var clone = sample_clone.cloneNode(true);\n      list.appendChild(clone);\n      serialize_ques_options();\n    });\n  });\n\n  // Form construction submit\n  var form = document.getElementById(\"formulary-form\");\n  if (form) {\n    var input_data = document.getElementById(\"form-data\");\n    form.addEventListener(\"submit\", function (event) {\n      // event.preventDefault();\n      var data = [];\n      for (var i = 1; i <= 4; i++) {\n        var ques = [];\n        var block = document.getElementById(\"visit-block-\"+i);\n        _(block.children).each(function (child) {\n          ques.push(child.dataset.id);\n        });\n        data.push(ques);\n      }\n      input_data.value = JSON.stringify(data);\n    });\n  }\n\n  // Questions creation init\n  var quests = document.getElementById(\"question-options\");\n  if (quests) {\n    var quests_cont = document.getElementById(\"quest-options-cont\");\n    var quest_type_sel = document.getElementById(\"quest-type\");\n    var option_check = function () {\n      var opt = quest_type_sel.options[quest_type_sel.selectedIndex];\n      quests_cont.style.display = opt.dataset.options ? \"block\" : \"none\";\n    };\n    quest_type_sel.addEventListener(\"change\", option_check);\n    option_check();\n    var quest_drake = dragula([quests], {\n      removeOnSpill: true,\n      moves: function (el, container, handle, sibling) {\n        if (container.children.length < 2) return false;\n        return handle.classList.contains(\"drag-handle\");\n      }\n    });\n    quest_drake.on(\"dragend\", function (el) {\n      serialize_ques_options();\n    });\n  }\n\n  // Forms Statistics\n  Chart.defaults.global.title.display = true;\n  // Gender Pie Chart\n  var gender_chart_dom = document.getElementById(\"pie-chart\");\n  if (gender_chart_dom) {\n    var data = JSON.parse(gender_chart_dom.dataset.chart);\n    var gender_chart = new Chart(gender_chart_dom.getContext('2d'), data);\n  }\n\n  var age_chart_dom = document.getElementById('age-chart');\n  if (age_chart_dom) {\n    var data = JSON.parse(age_chart_dom.dataset.chart);\n    var age_chart = new Chart(age_chart_dom.getContext('2d'), data);\n  }\n\n  var patients_chart_dom = document.getElementById('patients-chart');\n  if (patients_chart_dom) {\n    var data = JSON.parse(patients_chart_dom.dataset.chart);\n    var patients_chart = new Chart(patients_chart_dom.getContext('2d'), data);\n  }\n\n  // Dragula on forms construction\n  var questions_source = document.getElementById(\"questions-source\");\n\n  if (questions_source) {\n\n    var questions = [\"number\", \"select\", \"multiple\", \"scale\", \"yes-no\", \"radio\", \"osdi\", \"styles\"];\n    var question_templs = {};\n    _(questions).each(function (question) {\n      var tmpl = document.getElementById(question+\"-quest-tmpl\").innerHTML;\n      question_templs[question] = tmpl;\n      Mustache.parse(question_templs[question], [\"<%\", \"%>\"]);\n    });\n\n    var dragula_containers = [questions_source];\n    for (var i = 1; i < 5; i++) {\n      var block = document.getElementById(\"visit-block-\"+i);\n      dragula_containers.push(block);\n    }\n\n    var drake = dragula(dragula_containers, {\n      removeOnSpill: true,\n      copy: function (el, source) {\n        return source.id === \"questions-source\";\n      },\n      accepts: function (el, target) {\n        return target.id !== \"questions-source\";\n      },\n      moves: function (el, container, handle) {\n        if (container.id === \"questions-source\")\n          return true;\n        return handle.classList.contains(\"drag-handle\");\n      }\n    });\n\n    drake.on(\"drop\", function (element, container, src, sibling) {\n      // Get definition\n      var def = element.dataset.questionDefinition;\n      // Render question\n      drake.cancel(true);\n      var definition = JSON.parse(def);\n      // Validate if question already in block\n      var exists = container.querySelectorAll('[data-id=\"'+definition.id+'\"]');\n      if (exists.length > 0) {\n        alert(\"Esta pregunta ya existe para esta visita\");\n      } else {\n        // Else do render\n        if (!element.classList.contains(\"js-source\"))\n          element.remove();\n        definition.visit_block = container.dataset.blockName;\n        definition.definition = def;\n        var tmpl = question_templs[definition.type];\n        var rendered = Mustache.render(tmpl, definition);\n        var wrapper= document.createElement(\"div\");\n        wrapper.innerHTML = rendered;\n        container.insertBefore(wrapper.children[0], sibling);\n      }\n    });\n  }\n\n  function update_form_styles () {\n\n    var cont = document.getElementById(\"af-container\");\n    // Get color values\n    var v = {};\n    v[\"bg\"] = document.getElementById(\"af-bg-color\").value;\n    v[\"accent\"] = document.getElementById(\"af-accent-color\").value;\n    // Calc colors\n    v[\"text\"] = tinycolor(v[\"bg\"]).isDark() ? \"white\" : \"rgba(0, 0, 0, 0.8)\"\n    v[\"input_bg\"] = (tinycolor(v[\"bg\"]).getBrightness() > 246) ? \"#ECECEC\" : \"white\";\n    v[\"accent_darken\"] = tinycolor(v[\"accent\"]).darken(5);\n    v[\"accent_text\"] = tinycolor(v[\"accent_darken\"]).isDark() ? \"white\" : \"rgba(0, 0, 0, 0.8)\";\n    // Set template\n    var tmpl = question_templs[\"styles\"];\n    var style_sheet = Mustache.render(tmpl, v);\n    write_styles(\"af-styles\", style_sheet);\n    // Change controls accordingly\n    cont.classList.toggle(\"af--dark\", tinycolor(v[\"bg\"]).isDark());\n  }\n\n  // Write styles directly for form customization\n  function write_styles (style_id, css_text) {\n    var style_el = document.getElementById(style_id);\n    if (style_el) document.getElementsByTagName(\"head\")[0].removeChild(style_el);\n    style_el = document.createElement('style');\n    style_el.type = \"text/css\";\n    style_el.id = style_id;\n    style_el.innerHTML = css_text;\n    document.getElementsByTagName(\"head\")[0].appendChild(style_el);\n  }\n\n  // Form styles update\n  each_node_evt_init_once(\"[data-appform-style-trigger]\", \"change\", update_form_styles);\n\n  function not_responsive_check () {\n    var w = window.innerWidth;\n    document.body.classList.toggle(\"not-responsive-notice\", w < 980);\n  }\n\n  function each_node_evt (selector, type, cb) {\n    var nodes = document.querySelectorAll(selector);\n    _(nodes).each(function (node) {\n      node.addEventListener(type, cb);\n    });\n  }\n\n  function each_node_evt_init (selector, type, cb) {\n    var nodes = document.querySelectorAll(selector);\n    _(nodes).each(function (node) {\n      node.addEventListener(type, cb);\n      cb();\n    });\n  }\n\n  function each_node_evt_init_once (selector, type, cb) {\n    var nodes = document.querySelectorAll(selector);\n    _(nodes).each(function (node) {\n      node.addEventListener(type, cb);\n    });\n    if (nodes.length > 0) cb();\n  }\n\n  function onetime (node, type, callback) {\n    // create event\n    node.addEventListener(type, function (e) {\n      // remove event\n      e.target.removeEventListener(e.type, arguments.callee);\n      // call handler\n      return callback(e);\n    });\n  }\n\n  function nodes_to_arr (nodes) {\n    return Array.prototype.slice.call(nodes);\n  }\n\n  function serialize_ques_options () {\n    var cont = document.getElementById(\"question-options\");\n    _(cont.children).each(function (node, index) {\n      var in_reply = node.querySelector(\"[data-reply]\");\n      var in_value = node.querySelector(\"[data-value]\");\n      in_reply.name = in_reply.id =\"id_form-\"+index+\"-reply\";\n      in_value.name = in_value.id =\"id_form-\"+index+\"-value\";\n    });\n  }\n\n  function get_input_image (input, cb) {\n    if (input.files && input.files[0]) {\n      var reader = new FileReader();\n      reader.onload = function (event) {\n        cb(event.target.result);\n      }\n      reader.readAsDataURL(input.files[0]);\n    } else return false;\n  }\n\n})();"]}